language: node_js
node_js:
  - "lts/*"

jobs:
  include:
    - stage: Test
      script:
        - npm test
        - npm run coverage
        - npm run build
    # Define the release stage that runs semantic-release
    - stage: Create Release
      script: skip
      deploy:
        provider: script
        skip_cleanup: true
        script: npx semantic-release
    - stage: Build and Deploy
      if: tag IS blank
      os: linux
      before_script:
        - npm install -g pkg
      script:
        - npm run build
      before_deploy:
        - pkg -o "start" --targets node10-linux-x64 "./dist/index.js"
        - node tools/generateReleaseHierarchy.js
        - zip "$TRAVIS_OS_NAME.zip" ./discord-ghost/*
      deploy:
        provider: releases
        api_key: "$GH_TOKEN"
        skip_cleanup: true
        file: "$TRAVIS_OS_NAME.zip"
    - stage: Build and Deploy
      if: tag IS blank
      os: osx
      before_script:
        - npm install -g pkg
      script:
        - npm run build
      before_deploy:
        - npm run build
        - pkg -o "start" --targets node10-macos-x64 "./dist/index.js"
        - node tools/generateReleaseHierarchy.js
        - zip "$TRAVIS_OS_NAME.zip" ./discord-ghost/*
      deploy:
        provider: releases
        api_key: "$GH_TOKEN"
        skip_cleanup: true
        file: "$TRAVIS_OS_NAME.zip"
    - stage: Build and Deploy
      if: tag IS blank
      os: windows
      before_script:
        - npm install -g pkg
      script:
        -npm run build
      before_deploy:
        - choco install zip
        - pkg -o "start" --targets node10-win-x64 "./dist/index.js"
        - node tools/generateReleaseHierarchy.js
        - zip "$TRAVIS_OS_NAME.zip" ./discord-ghost/*
      deploy:
        provider: script
        skip_cleanup: true
        script: node tools/releaseWindows.js "$GH_TOKEN"